<!--
Copyright 2013 Qubell, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:f="/lib/form">
  <st:documentation>
    Generates an input field <tt>&lt;input type="text" ... /></tt> to be
    used inside &lt;f:entry/>

    <st:attribute name="field">
      Used for databinding. TBD.
    </st:attribute>
    <st:attribute name="autoCompleteField">
      Used for determining the autocomplete URL.
      If @field is specified, that will be used for this.
    </st:attribute>
    <st:attribute name="name">
      This becomes @name of the &lt;input> tag.
      If @field is specified, this value is inferred from it.
    </st:attribute>
    <st:attribute name="localJson">
        Used by typeahead js
    </st:attribute>

    <st:attribute name="value">
      The initial value of the field. This becomes the @value of the &lt;input> tag.
      If @field is specified, the current property from the "instance" object
      will be set as the initial value automatically,
      which is the recommended approach.
    </st:attribute>
    <st:attribute name="default">
      The default value of the text box, in case both @value is and 'instance[field]' is null.
    </st:attribute>
    <!-- Tomcat doesn't like us using the attribute called 'class' -->
    <st:attribute name="clazz">
      Additional CSS class(es) to add (such as client-side validation clazz="required",
      "number" or "positive-number"; these may be combined, as clazz="required number").
    </st:attribute>
    <st:attribute name="checkMessage">
      Override the default error message when client-side validation fails,
      as with clazz="required", etc.
    </st:attribute>
    <st:attribute name="checkUrl">
      If specified, the value entered in this input field will be checked (via AJAX)
      against this URL, and errors will be rendered under the text field.

      If @field is specified, this will be inferred automatically,
      which is the recommended approach.
    </st:attribute>
    <st:attribute name="autoCompleteDelimChar">
      A single character that can be used as a delimiter for autocompletion. Normal
      autocomplete will replace the entire content of the text box with the autocomplete
      selection. With this attribute set, the selection will be appended with the
      delimiter to the existing value of the text box.
    </st:attribute>
  </st:documentation>
  <f:prepareDatabinding />
  ${descriptor.calcAutoCompleteSettings(autoCompleteField?:field,attrs)} <!-- this figures out the 'autoCompleteUrl' attribute -->

  <j:set var="controlId" value="${h.generateId()}"/>
  <script src="${resURL}/plugin/qubell/typeahead/hogan.js"></script>
  <script src="${resURL}/plugin/qubell/typeahead/jquery.min.js"></script>
  <script type="text/javascript">
    var $j = jQuery.noConflict();
  </script>
  <script src="${resURL}/plugin/qubell/typeahead/typeahead.min.js"></script>
 <link rel="stylesheet" type="text/css" href="${resURL}/plugin/qubell/typeahead/style.css" />

  <!-- mostly pass-through all the attributes -->
  <m:input xmlns:m="jelly:hudson.util.jelly.MorphTagLibrary"
         class="typeahead typeahead${controlId} setting-input ${attrs.checkUrl!=null?'validated':''} ${attrs.autoCompleteUrl!=null?'auto-complete':null} ${attrs.clazz}"
         name="${attrs.name ?: '_.'+attrs.field}"
         value="${attrs.value ?: instance[attrs.field] ?: attrs.default}"
         type="text"
         ATTRIBUTES="${attrs}" EXCEPT="field clazz" />
      <script type="text/javascript">
           Behaviour.specify(".typeahead${controlId}", 'textarea', 100, function (e) {
                  var $j = jQuery.noConflict();
                  $j('.typeahead${controlId}').typeahead({
                  name: '${attrs.name ?: '_.'+attrs.field}',
                  engine: Hogan,
                  template: [
                    '<p class="name-info"><span class="item-name">{{name}} </span> <span class="item-id">({{id}})</span></p>',
                    '<p class="org-info"><span class="org-name">Organization: {{organization.name}} </span> <span class="org-id">({{organization.id}})</span></p>'
                  ].join(''),
                  local: ${attrs.localJson}
                });
              });
      </script>
</j:jelly>